# Full Auth NGINX Configuration Template (HTTP Basic Auth)
# Domain: {{DOMAIN}}
# Backend: {{BACKEND_URL}}

upstream backend_{{DOMAIN}} {
    server {{BACKEND_URL}};
    keepalive 32;
}

server {
    listen 80;
    server_name {{DOMAIN}};
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name {{DOMAIN}};

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/{{DOMAIN}}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{DOMAIN}}.key;

    # Logging
    access_log /var/log/nginx/{{DOMAIN}}_access.log;
    error_log /var/log/nginx/{{DOMAIN}}_error.log;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # HTTP Basic Authentication
    auth_basic "Remnawave Panel Access";
    auth_basic_user_file {{HTPASSWD_FILE}};

    # Main application
    location / {
        proxy_pass {{BACKEND_URL}};
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Buffering settings
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_redirect off;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API endpoints (authenticated)
    location /api/ {
        proxy_pass {{BACKEND_URL}}/api/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_buffering off;
        proxy_redirect off;
    }

    # Health check endpoint (no auth required)
    location /health {
        auth_basic off;
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}
